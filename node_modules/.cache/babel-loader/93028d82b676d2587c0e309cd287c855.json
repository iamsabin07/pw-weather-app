{"ast":null,"code":"var _jsxFileName = \"/Users/iamsabin07/Desktop/my-project/src/App.js\";\nimport React, { useState } from \"react\";\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport './App.css';\nimport ToggleSwitch from \"./Toggle\";\n\nconst App = () => {\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState({});\n  const [togle, setTogle] = useState(false);\n  const [fahrenheit, setFahrenheit] = useState(false);\n  const [temp, setTemp] = useState(0);\n  const [celTemp, setCelTemp] = useState(0);\n  const [fahTempr, setFahTempr] = useState(0);\n\n  const handleSearch = async e => {\n    if (e.key === 'Enter') {\n      const data = await fetchWeather(city);\n\n      if (!fahrenheit) {\n        setCelTemp(data.main.temp);\n      } else {\n        const fahTemp = data.main.temp * 1.8 + 32;\n        setFahTempr(fahTemp);\n      }\n\n      console.log(data);\n      setWeather(data);\n      setTogle(true);\n      setCity('');\n    }\n  };\n\n  const handleClick = () => {\n    if (!fahrenheit) {\n      const fahTemp = weather.main.temp * 1.8 + 32;\n      setFahTempr(fahTemp);\n    }\n\n    setFahrenheit(!fahrenheit);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search\",\n    placeholder: \"Enter a city name\",\n    value: city,\n    onChange: e => setCity(e.target.value),\n    onKeyPress: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), togle && /*#__PURE__*/React.createElement(ToggleSwitch, {\n    label: \"Unit\",\n    handleClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }\n  })), weather.main && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"city-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, weather.name, /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, weather.sys.country)), fahrenheit ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 33\n    }\n  }, Math.round(fahTempr), /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 37\n    }\n  }, \"\\xB0F\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, Math.round(celTemp), /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"city-icon\",\n    src: `https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`,\n    alt: weather.weather[0].description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, weather.weather[0].description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, \"Humidity: \", weather.main.humidity, \"%\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/iamsabin07/Desktop/my-project/src/App.js"],"names":["React","useState","fetchWeather","ToggleSwitch","App","city","setCity","weather","setWeather","togle","setTogle","fahrenheit","setFahrenheit","temp","setTemp","celTemp","setCelTemp","fahTempr","setFahTempr","handleSearch","e","key","data","main","fahTemp","console","log","handleClick","target","value","name","sys","country","Math","round","icon","description","humidity"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport './App.css';\nimport ToggleSwitch from \"./Toggle\";\n\nconst App = () =>{\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState({});\n    const [togle, setTogle] = useState(false);\n    const[fahrenheit, setFahrenheit] = useState(false);\n    const [ temp, setTemp] = useState(0);\n    const[celTemp, setCelTemp] = useState(0);\n    const[fahTempr, setFahTempr] = useState(0);\n\n    const handleSearch =  async(e) =>{\n        \n        if(e.key === 'Enter'){\n            const data = await fetchWeather(city);\n            if(!fahrenheit){\n                setCelTemp(data.main.temp)\n            }\n            else{\n                const fahTemp = (data.main.temp * 1.8)+32;\n                setFahTempr(fahTemp);\n            }\n            console.log(data);\n            setWeather(data);\n            setTogle(true);\n            setCity('');\n\n\n        }\n    }\n    const handleClick = () =>{\n        if(!fahrenheit){\n            const fahTemp = (weather.main.temp * 1.8)+32;\n            setFahTempr(fahTemp);\n        }\n        setFahrenheit(!fahrenheit);\n    }\n    return (\n        <div className=\"main-container\">\n            \n            <div className=\"input-toggle\">\n            <input  \n                type = \"text\"\n                className=\"search\"\n                placeholder=\"Enter a city name\"\n                value = {city}\n                onChange = {(e)=>setCity(e.target.value)}\n                onKeyPress = {handleSearch}\n            />\n            {togle &&<ToggleSwitch label = \"Unit\" handleClick={handleClick}/>}\n            </div>\n\n            {weather.main && (\n\n                        <div className=\"city\">\n                        <h2 className=\"city-name\">\n                            {weather.name}\n                            <sup>{weather.sys.country}</sup>\n                        </h2>\n                        {fahrenheit?\n                                <div className=\"city-temp\">\n                                    {Math.round(fahTempr)}\n                                    <sup>&deg;F</sup>\n                                </div>:\n                                <div className=\"city-temp\">\n                                {Math.round(celTemp)}\n                                <sup>&deg;C</sup>\n                            </div>                                }\n                        <div className=\"info\">\n                            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n                            <p>{weather.weather[0].description}</p>\n                            <p>Humidity: {weather.main.humidity}%</p>\n                        </div>\n                </div>\n            )}\n        </div>\n    )\n\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
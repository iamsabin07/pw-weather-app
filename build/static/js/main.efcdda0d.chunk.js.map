{"version":3,"sources":["api/fetchWeather.js","Toggle.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","ToggleSwitch","label","handleClick","className","type","name","id","onClick","htmlFor","App","useState","city","setCity","weather","setWeather","togle","setTogle","fahrenheit","setFahrenheit","celTemp","setCelTemp","fahTempr","setFahTempr","handleSearch","e","key","fahTemp","main","temp","console","log","placeholder","value","onChange","target","onKeyPress","Toggle","sys","country","Math","round","src","icon","alt","description","humidity","ReactDOM","render","document","getElementById"],"mappings":"4RAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACDC,IAAMC,IAJrB,kDAI8B,CAClCC,OAAQ,CACJC,EAAGL,EACHM,MAAO,SACPC,MAPI,sCAEY,uBAChBC,EADgB,EAChBA,KADgB,kBASjBA,GATiB,2CAAH,sDCcVC,G,YAfM,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC7B,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,iBACb,2BAAOC,KAAK,WAAWD,UAAU,WAC1BE,KAAMJ,EAAOK,GAAIL,EAAOM,QAAWL,IAC1C,2BAAOC,UAAU,QAAQK,QAASP,GAChC,0BAAME,UAAU,UAChB,0BAAMA,UAAU,gBCuEXM,EA9EH,WAAM,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGaJ,oBAAS,GAHtB,mBAGNK,EAHM,KAGCC,EAHD,OAIsBN,oBAAS,GAJ/B,mBAIPO,EAJO,KAIKC,EAJL,OAKYR,mBAAS,GALrB,gCAMgBA,mBAAS,IANzB,mBAMPS,EANO,KAMEC,EANF,OAOkBV,mBAAS,GAP3B,mBAOPW,EAPO,KAOGC,EAPH,KASPC,EAAY,uCAAI,WAAMC,GAAN,iBAAAhC,EAAA,yDAEL,UAAVgC,EAAEC,IAFa,gCAGKnC,EAAaqB,GAHlB,OAGRZ,EAHQ,OAIVkB,GAIMS,EAA4B,IAAjB3B,EAAK4B,KAAKC,KAAY,GACvCN,EAAYI,IAJZN,EAAWrB,EAAK4B,KAAKC,MAMzBC,QAAQC,IAAI/B,GACZe,EAAWf,GACXiB,GAAS,GACTJ,EAAQ,IAdM,2CAAJ,sDA0BlB,OACI,yBAAKT,UAAU,kBAEX,yBAAKA,UAAU,gBACf,2BACIC,KAAO,OACPD,UAAU,SACV4B,YAAY,oBACZC,MAASrB,EACTsB,SAAY,SAACT,GAAD,OAAKZ,EAAQY,EAAEU,OAAOF,QAClCG,WAAcZ,IAEjBR,GAAQ,kBAACqB,EAAD,CAAcnC,MAAQ,OAAOC,YAnB1B,WAChB,IAAIe,EAAW,CACX,IAAMS,EAA+B,IAApBb,EAAQc,KAAKC,KAAY,GAC1CN,EAAYI,GAEhBR,GAAeD,OAiBVJ,EAAQc,MAEG,yBAAKxB,UAAU,QACf,wBAAIA,UAAU,aACTU,EAAQR,KACT,6BAAMQ,EAAQwB,IAAIC,UAErBrB,EACO,yBAAKd,UAAU,aACVoC,KAAKC,MAAMnB,GACZ,uCAEJ,yBAAKlB,UAAU,aACdoC,KAAKC,MAAMrB,GACZ,uCAER,yBAAKhB,UAAU,QACX,yBAAKA,UAAU,YAAYsC,IAAG,4CAAuC5B,EAAQA,QAAQ,GAAG6B,KAA1D,WAAyEC,IAAK9B,EAAQA,QAAQ,GAAG+B,cAC/H,2BAAI/B,EAAQA,QAAQ,GAAG+B,aACvB,wCAAc/B,EAAQc,KAAKkB,SAA3B,SCrE5BC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.efcdda0d.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'f33a484cf794d08d0148764789aaba32';\n\nexport const fetchWeather = async (query) => {\n    const { data } = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: API_KEY,\n        }\n    });\n\n    return data;\n}","\nimport React from \"react\";\nimport \"./ToggleSwitch.css\";\n  \nconst ToggleSwitch = ({ label, handleClick }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"toggle-switch\">\n        <input type=\"checkbox\" className=\"checkbox\" \n               name={label} id={label} onClick = {handleClick}/>\n        <label className=\"label\" htmlFor={label}>\n          <span className=\"inner\" />\n          <span className=\"switch\" />\n        </label>\n      </div>\n    </div>\n  );\n};\n  \nexport default ToggleSwitch;","import React, { useState } from \"react\";\nimport { fetchWeather } from \"./api/fetchWeather\";\nimport './App.css';\nimport ToggleSwitch from \"./Toggle\";\n\nconst App = () =>{\n    const [city, setCity] = useState('');\n    const [weather, setWeather] = useState({});\n    const [togle, setTogle] = useState(false);\n    const[fahrenheit, setFahrenheit] = useState(false);\n    const [ temp, setTemp] = useState(0);\n    const[celTemp, setCelTemp] = useState(0);\n    const[fahTempr, setFahTempr] = useState(0);\n\n    const handleSearch =  async(e) =>{\n        \n        if(e.key === 'Enter'){\n            const data = await fetchWeather(city);\n            if(!fahrenheit){\n                setCelTemp(data.main.temp)\n            }\n            else{\n                const fahTemp = (data.main.temp * 1.8)+32;\n                setFahTempr(fahTemp);\n            }\n            console.log(data);\n            setWeather(data);\n            setTogle(true);\n            setCity('');\n\n\n        }\n    }\n    const handleClick = () =>{\n        if(!fahrenheit){\n            const fahTemp = (weather.main.temp * 1.8)+32;\n            setFahTempr(fahTemp);\n        }\n        setFahrenheit(!fahrenheit);\n    }\n    return (\n        <div className=\"main-container\">\n            \n            <div className=\"input-toggle\">\n            <input  \n                type = \"text\"\n                className=\"search\"\n                placeholder=\"Enter a city name\"\n                value = {city}\n                onChange = {(e)=>setCity(e.target.value)}\n                onKeyPress = {handleSearch}\n            />\n            {togle &&<ToggleSwitch label = \"Unit\" handleClick={handleClick}/>}\n            </div>\n\n            {weather.main && (\n\n                        <div className=\"city\">\n                        <h2 className=\"city-name\">\n                            {weather.name}\n                            <sup>{weather.sys.country}</sup>\n                        </h2>\n                        {fahrenheit?\n                                <div className=\"city-temp\">\n                                    {Math.round(fahTempr)}\n                                    <sup>&deg;F</sup>\n                                </div>:\n                                <div className=\"city-temp\">\n                                {Math.round(celTemp)}\n                                <sup>&deg;C</sup>\n                            </div>                                }\n                        <div className=\"info\">\n                            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n                            <p>{weather.weather[0].description}</p>\n                            <p>Humidity: {weather.main.humidity}%</p>\n                        </div>\n                </div>\n            )}\n        </div>\n    )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}